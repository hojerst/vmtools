#!/bin/bash

##############################################################################
# functions
##############################################################################
die() {
    echo 1>&2 "ERROR:" "$@"
    exit 1
}

usage() {
    echo "usage: vmcreate name diskInGb memoryInMb numberOfCPUs"
    exit 1
}

# render a template
render() {
    TEMPLATE="$1"
    shift

    local "$@"

    eval "cat <<TEMPLATE
$(<$TEMPLATE)
TEMPLATE"
}

##############################################################################
# configuration
##############################################################################
CONFDIR="$HOME/.vmtools"

[ -r "$CONFDIR/config" ] || die "no configuration file found"
source "$CONFDIR/config"

VM="$1"
DISKSIZE="${2:-$DEFAULT_DISKSIZE}"
MEMSIZE="${3:-$DEFAULT_MEMORY}"
CPUS="${4:-$DEFAULT_VCPUS}"

##############################################################################
# sanity checks
##############################################################################
[ $UID -eq 0 ] || die "this script must be run as root"
[ $# -lt 1 ] || [ $# -gt 4 ] && usage
[ $DISKSIZE -ge "2" ] || die "disk size must be at least 2 gb"
[ $MEMSIZE -ge "512" ] || die "memory size must be at least 512 mb"
[ $CPUS -ge 1 ] || die "need at least one cpu"
[ ! -e "/dev/$POOL/$VM" ] || die "disk for vm $VM already exists"
virsh dominfo "$VM" >/dev/null 2>&1 && die "vm $VM already exists"

##############################################################################
# work dir
##############################################################################
WORKDIR=$(mktemp -d /tmp/vmcreateXXXXXX)
trap "rm -rf -- '$WORKDIR'" EXIT

##############################################################################
# summary
##############################################################################
echo "creating vm $VM:"
echo "  memory: $MEMSIZE mb"
echo "  disk:   $DISKSIZE gb"
echo "  cpus:   $CPUS"
echo "  image:  $IMAGE"
echo

##############################################################################
# main
##############################################################################

cd "$CONFDIR"

echo "creating disk"
virsh vol-create-as --pool "$POOL" --name "$VM" --capacity "$DISKSIZE"G || die "can't create volume"
DISKPATH=$(virsh vol-path --pool "$POOL" "$VM")

echo "expanding image to full disk size"
virt-resize "$IMAGE" "$DISKPATH" --expand /dev/vda1 || die "can't initialize volume"

echo "preparing system for first boot"
virt-sysprep -a "$DISKPATH" \
    --hostname "$VM" \
    --firstboot "$FIRSTBOOTSCRIPT" || die "can't prepare system volume"

echo "installing ssh keys"
guestfish -a "$DISKPATH" <<EOF
run
mount /dev/sda1 /
mkdir /root/.ssh
copy-in $CONFDIR/authorized_keys /root/.ssh
chown 0 0 /root/.ssh/authorized_keys
EOF

echo "creating vm"
render "$HOME/.vmtools/node.xml" NAME=$VM MEMORY=$((MEMSIZE*1024)) VCPUS=$CPUS >$WORKDIR/node.xml
virsh define "$WORKDIR/node.xml"

echo "starting vm"
virsh start "$VM"
virsh autostart "$VM"
